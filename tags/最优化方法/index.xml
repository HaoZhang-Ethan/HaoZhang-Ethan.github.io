<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>最优化方法 on Hugoplate</title><link>/tags/%E6%9C%80%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/</link><description>Recent content in 最优化方法 on Hugoplate</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 12 Dec 2023 05:00:00 +0000</lastBuildDate><atom:link href="/tags/%E6%9C%80%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>最优化算法</title><link>/blog/post-1/</link><pubDate>Tue, 12 Dec 2023 05:00:00 +0000</pubDate><guid>/blog/post-1/</guid><description>之前做的2篇文章都把问题抽象为一个优化问题，发现自己缺乏对解决优化问题方法（优化算法）进行系统性的学习，这导致每次解决问题时总是用模拟退火或者更简单的启发式方法改改就用。说好听点是发现问题比解决问题更为重要，但其实有种水文章的感觉。虽然这些启发式大多数情况算法也能make sense，但是继续深入学习还是有必要的。
在此记录学习过程，希望大家指正，但是还没找到给主页添加评论的方法。
最优化问题范指定量决策问题, 也就是如何对有限的资源进行合理的分配以达到最优目标。
数学抽象：
$$ min\ f(x), \\ s.</description></item></channel></rss>